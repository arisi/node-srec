// Generated by CoffeeScript 1.4.0
(function() {
  var sprintf, srec;

  srec = require('node-srec');

  sprintf = require('sprintf').sprintf;

  if (false) {
    srec.readSrecUrl("https://s3-eu-west-1.amazonaws.com/static.lnx.fi/sol_STM32L_mg11.srec", function(data) {
      var a, b, bl, byte, s, _i, _len, _results;
      console.log("data:", data);
      bl = srec.blockify(data, 0x08000000, 0x08010000, 64);
      _results = [];
      for (a in bl) {
        b = bl[a];
        s = sprintf("%08X:", parseInt(a));
        for (_i = 0, _len = b.length; _i < _len; _i++) {
          byte = b[_i];
          s += sprintf("%02X ", byte);
        }
        _results.push(console.log(s));
      }
      return _results;
    });
  }

  srec.readSrecFile("/home/arisi/projects/mygit/arisi/ctex_apps/bin/appi.srec", function(data) {
    var a, b, bl, byte, s, _i, _len;
    bl = srec.blockify(data, 0x0801f000, 0x08020000, 64);
    for (a in bl) {
      b = bl[a];
      s = sprintf("%08X:", parseInt(a));
      for (_i = 0, _len = b.length; _i < _len; _i++) {
        byte = b[_i];
        s += sprintf("%02X ", byte);
      }
      console.log(s);
    }
    return srec.readSrecFile("/home/arisi/projects/mygit/arisi/ctex_apps/bin/appi.srec", function(data) {
      var _j, _len1, _results;
      bl = srec.blockify(data, 0x0801f000, 0x08020000, 64);
      _results = [];
      for (a in bl) {
        b = bl[a];
        s = sprintf("%08X:", parseInt(a));
        for (_j = 0, _len1 = b.length; _j < _len1; _j++) {
          byte = b[_j];
          s += sprintf("%02X ", byte);
        }
        _results.push(console.log(s));
      }
      return _results;
    });
  });

}).call(this);
